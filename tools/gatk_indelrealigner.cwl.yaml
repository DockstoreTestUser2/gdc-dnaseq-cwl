#!/usr/bin/env cwl-runner

cwlVersion: "cwl:draft-3"

description: |
  Usage:  cwl-runner <this-file-path> XXXX
  Options:
    --bam_path       input bam path
    --uuid           uuid

requirements:
  - class: DockerRequirement
    dockerPull: quay.io/ncigdc/cocleaning-tool
  - class: InlineJavascriptRequirement

class: CommandLineTool

inputs:
  - id: "#input_bam_path"
    type:
      type: array
      items: File
      inputBinding:
        prefix: --bam_path
      secondaryFiles: |
        ${
        return {"path": self.path.slice(0,-4) + ".bai", "class": "File"};
        }

  - id: known_indel_vcf_path
    type: File
    inputBinding:
      prefix: --known_indel_vcf_path
    secondaryFiles:
      - .tbi

  - id: reference_fasta_path
    type: File
    inputBinding:
      prefix: --reference_fasta_path
    secondaryFiles: |
        ${
          return [
            {"path": inputs.reference_fasta_path.path.slice(0,-3)+".dict", "class": "File"},
            {"path": inputs.reference_fasta_path.path + ".fai", "class": "File"}
          ];
        }

  - id: target_intervals_path
    type: File
    inputBinding:
      prefix: --intervals_path
      
  - id: uuid
    type: string
    inputBinding:
      prefix: --uuid


outputs:
  - id: output_bam
    type:
      type: array
      items: File
    outputBinding:
      glob: |
        {
        var bam_array = [];
        for (var i = 0; i < inputs.bam_path.length; i++) {
          bam_array.concact({"path": inputs.bam_path[i].path.split('/').slice(-1)[0], "class": "File"});
        }
        return bam_array
        }
    outputEval: $( self.sort(function(a,b) { return a.path > b.path }) )

  - id: log
    type: File
    description: "python log file"
    outputBinding:
      glob: $(inputs.uuid + "_gatk_indelrealigner.log")

          
baseCommand: ["/home/ubuntu/.virtualenvs/p3/bin/python","/home/ubuntu/tools/cocleaning-tool/main.py", "--tool_name", "indelrealigner"]
#        ./*.bam
