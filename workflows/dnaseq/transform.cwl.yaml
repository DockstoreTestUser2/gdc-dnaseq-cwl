#!/usr/bin/env cwl-runner

cwlVersion: v1.0

class: Workflow

requirements:
  - class: InlineJavascriptRequirement
  - class: MultipleInputFeatureRequirement
  - class: ScatterFeatureRequirement
  - class: StepInputExpressionRequirement

inputs:
  - id: bam_path
    type: File
  - id: db_snp_path
    type: File
  - id: reference_fasta_path
    type: File
  - id: thread_count
    type: int
  - id: uuid
    type: string

outputs:
  - id: picard_markduplicates_output
    type: File
    outputSource: picard_markduplicates/OUTPUT
  # - id: merge_all_sqlite_destination_sqlite
  #   type: File
  #   source: merge_all_sqlite/destination_sqlite

steps:
  - id: samtools_bamtobam
    run: ../../tools/samtools_bamtobam.cwl.yaml
    in:
      - id: INPUT
        source: bam_path
    out:
      - id: OUTPUT

  - id: biobambam_bamtofastq
    run: ../../tools/biobambam2_bamtofastq.cwl.yaml
    in:
      - id: filename
        source: samtools_bamtobam/OUTPUT
    out:
      - id: output_fastq1
      - id: output_fastq2
      - id: output_fastq_o1
      - id: output_fastq_o2
      - id: output_fastq_s

  - id: bam_readgroup_to_json
    run: ../../tools/bam_readgroup_to_json.cwl.yaml
    in:
      - id: INPUT
        source: samtools_bamtobam/OUTPUT
    out:
      - id: OUTPUT

  - id: fastqc1
    run: ../../tools/fastqc.cwl.yaml
    scatter: fastqc1/INPUT
    in:
      - id: INPUT
        source: biobambam_bamtofastq/output_fastq1
      - id: threads
        source: thread_count
    out:
      - id: OUTPUT

  - id: fastqc2
    run: ../../tools/fastqc.cwl.yaml
    scatter: fastqc2/INPUT
    in:
      - id: INPUT
        source: biobambam_bamtofastq/output_fastq2
      - id: threads
        source: thread_count
    out:
      - id: OUTPUT

  # - id: fastqc_s
  #   run: ../../tools/fastqc.cwl.yaml
  #   scatter: fastqc_s/INPUT
  #   in:
  #     - id: INPUT
  #       source: biobambam_bamtofastq/output_fastq_s
  #     - id: threads
  #       source: thread_count
  #   out:
  #     - id: OUTPUT

  # - id: fastqc_o1
  #   run: ../../tools/fastqc.cwl.yaml
  #   scatter: fastqc_o1/INPUT
  #   in:
  #     - id: INPUT
  #       source: biobambam_bamtofastq/output_fastq_o1
  #     - id: threads
  #       source: thread_count
  #   out:
  #     - id: OUTPUT

  # - id: fastqc_o2
  #   run: ../../tools/fastqc.cwl.yaml
  #   scatter: fastqc_o2/INPUT
  #   in:
  #     - id: INPUT
  #       source: biobambam_bamtofastq/output_fastq_o2
  #     - id: threads
  #       source: thread_count
  #   out:
  #     - id: OUTPUT

  - id: fastqc_db1
    run: ../../tools/fastqc_db.cwl.yaml
    scatter: fastqc_db1/INPUT
    in:
      - id: INPUT
        source: fastqc1/OUTPUT
      - id: uuid
        source: uuid
    out:
      - id: LOG
      - id: OUTPUT

  - id: fastqc_db2
    run: ../../tools/fastqc_db.cwl.yaml
    scatter: fastqc_db2/INPUT
    in:
      - id: INPUT
        source: fastqc2/OUTPUT
      - id: uuid
        source: uuid
    out:
      - id: LOG
      - id: OUTPUT

  # - id: fastqc_db_s
  #   run: ../../tools/fastqc_db.cwl.yaml
  #   scatter: fastqc_db_s/INPUT
  #   in:
  #     - id: INPUT
  #       source: fastqc_s/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: LOG
  #     - id: OUTPUT

  # - id: fastqc_db_o1
  #   run: ../../tools/fastqc_db.cwl.yaml
  #   scatter: fastqc_db_o1/INPUT
  #   in:
  #     - id: INPUT
  #       source: fastqc_o1/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: LOG
  #     - id: OUTPUT

  # - id: fastqc_db_o2
  #   run: ../../tools/fastqc_db.cwl.yaml
  #   scatter: fastqc_db_o2/INPUT
  #   in:
  #     - id: INPUT
  #       source: fastqc_o2/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: LOG
  #     - id: OUTPUT

  - id: merge_fastqc_db1_sqlite
    run: ../../tools/merge_sqlite.cwl.yaml
    in:
      - id: source_sqlite
        source: fastqc_db1/OUTPUT
      - id: uuid
        source: uuid
    out:
      - id: destination_sqlite
      - id: log

  - id: merge_fastqc_db2_sqlite
    run: ../../tools/merge_sqlite.cwl.yaml
    in:
      - id: source_sqlite
        source: fastqc_db2/OUTPUT
      - id: uuid
        source: uuid
    out:
      - id: destination_sqlite
      - id: log

  # - id: merge_fastqc_db_s_sqlite
  #   run: ../../tools/merge_sqlite.cwl.yaml
  #   in:
  #     - id: source_sqlite
  #       source: fastqc_db_s/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: destination_sqlite
  #     - id: log

  # - id: merge_fastqc_db_o1_sqlite
  #   run: ../../tools/merge_sqlite.cwl.yaml
  #   in:
  #     - id: source_sqlite
  #       source: fastqc_db_o1/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: destination_sqlite
  #     - id: log

  # - id: merge_fastqc_db_o2_sqlite
  #   run: ../../tools/merge_sqlite.cwl.yaml
  #   in:
  #     - id: source_sqlite
  #       source: fastqc_db_o2/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: destination_sqlite
  #     - id: log

  - id: fastqc_pe_basicstats_json
    run: ../../tools/fastqc_basicstatistics_json.cwl
    in:
      - id: sqlite_path
        source: merge_fastqc_db1_sqlite/destination_sqlite
    out:
      - id: OUTPUT

  # - id: fastqc_se_json
  #   run: ../../tools/fastqc_basicstatistics_json.cwl
  #   in:
  #     - id: merge_fastqc_db_s_sqlite/destination_sqlite
  #   out:
  #     - id: OUTPUT

  # - id: fastqc_o1_json
  #   run: ../../tools/fastqc_basicstatistics_json.cwl
  #   in:
  #     - id: merge_fastqc_db_o1_sqlite/destination_sqlite
  #   out:
  #     - id: OUTPUT

  # - id: fastqc_o2_json
  #   run: ../../tools/fastqc_basicstatistics_json.cwl
  #   in:
  #     - id: merge_fastqc_db_o2_sqlite/destination_sqlite
  #   out:
  #     - id: OUTPUT
#need eof and dup QNAME detection

  # - id: picard_validatesamfile_to_sqlite
  #   run: ../../tools/picard_validatesamfile_to_sqlite.cwl.yaml
  #   in:
  #     - id: bam
  #       source: bam_path
  #       valueFrom: $(self.basename)
  #     - id: input_state
  #       valueFrom: "original"
  #     - id: metric_path
  #       source: picard_validatesamfile/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: sqlite

  # - id: picard_collectalignmentsummarymetrics
  #   run: ../../tools/picard_collectalignmentsummarymetrics.cwl.yaml
  #   in:
  #     - id: INPUT
  #       source: bam_path
  #   out:
  #     - id: OUTPUT

  # - id: picard_collectalignmentsummarymetrics_to_sqlite
  #   run: ../../tools/picard_collectalignmentsummarymetrics_to_sqlite.cwl.yaml
  #   in:
  #     - id: bam
  #       source: bam_path
  #       valueFrom: $(self.basename)
  #     - id: input_state
  #       valueFrom: "original"
  #     - id: metric_path
  #       source: picard_collectalignmentsummarymetrics/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: sqlite

  # - id: readgroup_json_db
  #   run: ../../tools/readgroup_json_db.cwl.yaml
  #   scatter: readgroup_json_db/json_path
  #   in:
  #     - id: json_path
  #       source: bam_readgroup_to_json/OUTPUT
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: log
  #     - id: output_sqlite

  # - id: merge_readgroup_json_db_sqlite
  #   run: ../../tools/merge_sqlite.cwl.yaml
  #   in:
  #     - id: source_sqlite
  #       source: readgroup_json_db/output_sqlite
  #     - id: uuid
  #       source: uuid
  #   out:
  #     - id: destination_sqlite
  #     - id: log

  # - id: decider_bwa_pe
  #   run: ../../tools/decider_bwa_pe_docker.cwl.yaml
  #   inputs:
  #     - id: fastq1_path
  #       source: "#biobambam2_bamtofastq/output_fastq1"
  #     - id: fastq2_path
  #       source: "#biobambam2_bamtofastq/output_fastq2"
  #     - id: readgroup_path
  #       source: "#bam_readgroup_to_json/output_json"
  #     - id: fastqc_db1_path
  #       source: "#fastqc_db1/output_sqlite"
  #     - id: fastqc_db2_path
  #       source: "#fastqc_db2/output_sqlite"
  #     - id: uuid
  #       source: "#uuid"
  #   outputs:
  #     - id: output_fastq1_paths
  #     - id: output_fastq2_paths
  #     - id: output_readgroup_paths
  #     - id: output_db1_paths
  #     - id: output_db2_paths

  # - id: decider_bwa_se
  #   run: ../../tools/decider_bwa_se_docker.cwl.yaml
  #   inputs:
  #     - id: fastq_path
  #       source: "#biobambam2_bamtofastq/output_fastq_s"
  #     - id: readgroup_path
  #       source: "#bam_readgroup_to_json/output_json"
  #     - id: fastqc_db_path
  #       source: "#fastqc_db_s/output_sqlite"
  #     - id: uuid
  #       source: "#uuid"
  #   outputs:
  #     - id: output_fastq_paths
  #     - id: output_readgroup_paths
  #     - id: output_db_paths

  # - id: decider_bwa_o1
  #   run: ../../tools/decider_bwa_o1_docker.cwl.yaml
  #   inputs:
  #     - id: fastq_path
  #       source: "#biobambam2_bamtofastq/output_fastq_o1"
  #     - id: readgroup_path
  #       source: "#bam_readgroup_to_json/output_json"
  #     - id: fastqc_db_path
  #       source: "#fastqc_db_o1/output_sqlite"
  #     - id: uuid
  #       source: "#uuid"
  #   outputs:
  #     - id: output_fastq_paths
  #     - id: output_readgroup_paths
  #     - id: output_db_paths

  # - id: decider_bwa_o2
  #   run: ../../tools/decider_bwa_o2_docker.cwl.yaml
  #   inputs:
  #     - id: fastq_path
  #       source: "#biobambam2_bamtofastq/output_fastq_o1"
  #     - id: readgroup_path
  #       source: "#bam_readgroup_to_json/output_json"
  #     - id: fastqc_db_path
  #       source: "#fastqc_db_o2/output_sqlite"
  #     - id: uuid
  #       source: "#uuid"
  #   outputs:
  #     - id: output_fastq_paths
  #     - id: output_readgroup_paths
  #     - id: output_db_paths

  # - id: bwa_pe
  #   run: ../../tools/bwa_pe.cwl.yaml
  #   scatter: [bwa_pe/fastq1_path, bwa_pe/fastq2_path, bwa_pe/readgroup_json_path]
  #   scatterMethod: "dotproduct"
  #   inputs:
  #     - id: fasta
  #       source: reference_fasta_path
  #     - id: fastq1
  #       source: decider_bwa_pe/output_fastq1_paths
  #     - id: fastq2
  #       source: decider_bwa_pe/output_fastq2_paths
  #     - id: readgroup_json_path
  #       source: decider_bwa_pe/output_readgroup_paths
  #     - id: fastqc_json_path
  #       source: fastqc_pe_basicstats_json/OUTPUT
  #     - id: thread_count
  #       source: thread_count
  #   outputs:
  #     - id: OUTPUT


  - id: bwa_pe
    run: ../../tools/bwa_pe.cwl.yaml
    scatter: [bwa_pe/fastq1, bwa_pe/fastq2, bwa_pe/readgroup_json_path]
    scatterMethod: "dotproduct"
    in:
      - id: fasta
        source: reference_fasta_path
      - id: fastq1
        source: biobambam_bamtofastq/output_fastq1
      - id: fastq2
        source: biobambam_bamtofastq/output_fastq2
      - id: readgroup_json_path
        source: bam_readgroup_to_json/OUTPUT
      - id: fastqc_json_path
        source: fastqc_pe_basicstats_json/OUTPUT
      - id: thread_count
        source: thread_count
    out:
      - id: OUTPUT

  - id: picard_sortsam
    run: ../../tools/picard_sortsam.cwl.yaml
    scatter: picard_sortsam/INPUT
    in:
      - id: INPUT
        source: bwa_pe/OUTPUT
      - id: OUTPUT
        valueFrom: $(inputs.INPUT.basename)
    out:
      - id: SORTED_OUTPUT

  - id: picard_mergesamfiles
    run: ../../tools/picard_mergesamfiles.cwl.yaml
    in:
      - id: INPUT
        source: picard_sortsam/SORTED_OUTPUT
      - id: OUTPUT
        source: bam_path
        valueFrom: $(self.basename)
    out:
      - id: MERGED_OUTPUT

  - id: bam_reheader
    run: ../../tools/bam_reheader.cwl.yaml
    in:
      - id: bam_path
        source: picard_mergesamfiles/MERGED_OUTPUT
    out:
      - id: output_bam

  - id: picard_markduplicates
    run: ../../tools/picard_markduplicates.cwl.yaml
    in:
      - id: INPUT
        source: bam_reheader/output_bam
    out:
      - id: OUTPUT
      - id: METRICS

  # - id: picard_validatesamfile_original
  #   run: ../../tools/picard_validatesamfile.cwl.yaml
  #   in:
  #     - id: INPUT
  #       source: samtools_bamtobam/OUTPUT
  #     - id: VALIDATION_STRINGENCY
  #       valueFrom: "LENIENT"
  #   out:
  #     - id: OUTPUT

  # - id: picard_validatesamfile_markduplicates
  #   run: ../../tools/picard_validatesamfile.cwl.yaml
  #   in:
  #     - id: INPUT
  #       source: picard_markduplicates/OUTPUT
  #     - id: VALIDATION_STRINGENCY
  #       valueFrom: "LENIENT"
  #   out:
  #     - id: OUTPUT

  # - id: merge_all_sqlite
  #   run: ../../tools/merge_sqlite.cwl.yaml
  #   inputs:
  #     - id: source_sqlite
  #       source: [
  #         merge_bwa_pe_sqlite/destination_sqlite
  #         merge_picard_sortsam_sqlite/destination_sqlite
  #         merge_picard_buildbamindex_sqlite/destination_sqlite
  #         merge_fastqc1_sqlite/destination_sqlite
  #         merge_fastqc_db1_sqlite/destination_sqlite
  #         merge_fastqc2_sqlite/destination_sqlite
  #         merge_fastqc_db2_sqlite/destination_sqlite
  #         merge_readgroup_json_db_sqlite/destination_sqlite
  #         merge_samtools_flagstat_sqlite/destination_sqlite
  #         merge_samtools_stats_sqlite/destination_sqlite
  #         merge_picard_collectmultiplemetrics_sqlite/destination_sqlite
  #         merge_picard_collectoxogmetrics_sqlite/destination_sqlite
  #       ]
  #     - id: uuid
  #       source: uuid
  #   outputs:
  #     - id: destination_sqlite
  #     - id: log
