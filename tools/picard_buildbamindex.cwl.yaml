#!/usr/bin/env cwl-runner

# example
# cwl-runner --outdir /mnt/SCRATCH/47b42e81-2500-4ebc-a0c2-acd3187cc2f0 --verbose ~/SCRATCH/tools/picard_buildbamindex_docker/cwl/picard_buildbamindex.cwl.yaml --bam_path ~/SCRATCH/47b42e81-2500-4ebc-a0c2-acd3187cc2f0/C440.TCGA-IN-8462-01A-11D-2340-08.1.bam --uuid test

description: |
  Usage:  cwl-runner --outdir <out-dir> <this-file-path> --bam_path <bam-path> --uuid <uuid-string>
  Options:
    --bam_path       Generate BAI-format index from BAM file
    --uuid           UUID for log file and sqlite db file

requirements:
  - import: node-engine.cwl
  - import: envvar-global.cwl
  - class: DockerRequirement
    dockerPull: quay.io/jeremiahsavage/picard_buildbamindex

class: CommandLineTool

inputs:
  - id: "#bam_path"
    type: File
    inputBinding:
      prefix: --bam_path

  - id: "#uuid"
    type: string
    inputBinding:
      prefix: --uuid

outputs:
  - id: "#bai_output"
    type: File
    description: "The index file"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
            return $job['bam_path'].path.split('/').slice(-1)[0].slice(0,-4)+".bai";
          }

  - id: "#sqlite"
    type: File
    description: "sqlite file"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script : |
          {
          return $job['uuid']+".db"
          }
  - id: "#log"
    type: File
    description: "python log file"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return "picard_buildbamindex_"+$job['uuid']+".log"
          }

          
baseCommand: ["/home/ubuntu/.virtualenvs/p3/bin/python","/home/ubuntu/picard_buildbamindex_docker/main.py"]