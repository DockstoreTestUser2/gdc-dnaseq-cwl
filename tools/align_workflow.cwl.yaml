#!/usr/bin/env cwl-runner

- id: bamtojson_cmd
  class: CommandLineTool
  inputs:
    - id: "#bam_path"
      type: File
  outputs:
    - id: "#output_json"
      type:
        type: array
        items: File
      outputBinding:
        glob: "*.json"
  baseCommand: []
        

  

- id: main
  class: Workflow
  requirements:
    - class: ScatterFeatureRequirement
    - class: StepInputExpressionRequirement
    - class: InlineJavascriptRequirement
    - import: node-engine.cwl
    - import: envvar-global.cwl
  inputs:
    - id: "#bam_path"
      type: File
  outputs:
    - id: "#align_output_bam"
      type:
        type: array
        items: File
      source: "#align.output_bam"
  steps:
    - id: "#bamtojson"
      run: "#bamtojson_cmd"
      inputs:
        - id: "#bamtojson.bam_path"
          source: "#bam_path"
      outputs:
        - id: "#bamtojson.output_json"
    - id: "#bamtofastq"
      run: "#bamtofastq_cmd"
      inputs:
        - id: "#bamtofastq.bam_path"
      outputs:
        - id: "#bamtofastq.output_fastq1"
          - id: "#bamtofastq.output_fastq2"
    - id: "#align"
      run: "#align_cmd"
      scatter:
        scatterMethod: "dotproduct"
        inputs:
          - id: "#align.fastq1_path"
            source: "#bamtofastq.output_fastq1"
          - id: "#align.fastq2_path"
            source: "#bamtofastq.output_fastq1"
            valueFrom:
              engine: "node-engine.cwl"
              script: |
                {
                return  {"path": $self.path.slice(0,-4)+"2.fq", "class": "File"};
                }
          - id: "#align.json"
            source: "#bamtojson.output_json"
            valueFrom:
              engine: "node-engine.cwl"
              script: |
                {
                var readgroup_basename = inputs.fastq1_path.path.split('/')[-1];
                var json_dir = self.path.split('/').slice(0,-1).join('/');
                var readgroup_jsonname = readgroup_basename + ".json";
                var json_path = json_dir + "/" + readgroup_jsonname;
                return {"path": json_path, "class": "File"};
                }
        outputs:
          - id: "#align.output_bam"
