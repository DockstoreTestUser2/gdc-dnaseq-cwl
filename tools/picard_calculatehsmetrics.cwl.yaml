#!/usr/bin/env cwl-runner

description: |
  Usage:  cwl-runner <this-file-path> ...
  Options:
    --input_bam      Generate metrics from BAM file
    --reference      Genome for metrics
    --uuid           UUID for log file and sqlite db file

requirements:
  - import: node-engine.cwl
  - import: envvar-global.cwl
  - class: DockerRequirement
    dockerPull: quay.io/jeremiahsavage/picard_tool:3

class: CommandLineTool

inputs:
  - id: "#input_bam"
    type: File
    inputBinding:
      prefix: --bam_path

  - id: "reference"
    type: File
    inputBinding:
      prefix: --reference_fasta_path

  - id: "#readgroup_interval_json"
    type: File
    inputBinding:
      prefix: --readgroup_intervals_json

  - id: "#interval_dir"
    type: File
    inputBinding:
      prefix: --interval_dir
      
  - id: "#uuid"
    type: string
    inputBinding:
      prefix: --uuid

  - id: "#db_cred_s3url"
    type: string
    inputBinding:
      prefix: --db_cred_s3url

  - id: "#s3cfg_path"
    type: string
    inputBinding:
      prefix: --s3cfg_path

      
outputs:
  - id: "#log"
    type: File
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job['uuid']+"_picard_CalculateHsMetrics.log"
          }
  
  - id: "#hs_metrics"
    type: File
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return "picard_CalculateHsMetrics_"+$job['input_bam'].path.split('/').slice(-1)[0].slice(0,-4) ;
          }


baseCommand: ["/home/ubuntu/.virtualenvs/p3/bin/python", "/home/ubuntu/.virtualenvs/p3/lib/python3.4/site-packages/picard_tool/main.py", "--tool_name", "CalculateHsMetrics"]
