#!/usr/bin/env cwl-runner

cwlVersion: v1.0

class: Workflow

requirements:
 - class: InlineJavascriptRequirement
 - class: StepInputExpressionRequirement
 - class: SubworkflowFeatureRequirement

inputs:
  - id: aws_config
    type: File
  - id: aws_shared_credentials
    type: File
  - id: bam_signpost_id
    type: string
  - id: endpoint_json
    type: File
  - id: load_bucket
    type: string
  - id: load_s3cfg_section
    type: string
  - id: signpost_base_url
    type: string
  - id: thread_count
    type: int
  - id: uuid
    type: string

outputs:
  - id: load_sqlite_output
    type: File
    outputSource: transform/merge_all_sqlite_destination_sqlite

steps:
  - id: extract_bam_signpost
    run: ../../tools/get_signpost_json.cwl.yaml
    in:
      - id: signpost_id
        source: bam_signpost_id
      - id: base_url
        source: signpost_base_url
    out:
      - id: output

  - id: extract_bam
    run: ../../tools/aws_s3_get_signpost.cwl.yaml
    in:
      - id: aws_config
        source: aws_config
      - id: aws_shared_credentials
        source: aws_shared_credentials
      - id: signpost_json
        source: extract_bam_signpost/output
      - id: endpoint_json
        source: endpoint_json
    out:
      - id: output

  - id: transform
    run: transform.cwl.yaml
    in:
      - id: bam_path
        source: extract_bam/output
      - id: thread_count
        source: thread_count
      - id: uuid
        source: uuid
    out:
      - id: merge_all_sqlite_destination_sqlite

  # - id: load_sqlite
  #   run: ../../tools/aws_s3_put.cwl.yaml
  #   in:
  #     - id: aws_config
  #       source: aws_config
  #     - id: aws_shared_credentials
  #       source: aws_shared_credentials
  #     - id: endpoint_json
  #       source: endpoint_json
  #     - id: input
  #       source: transform/merge_all_sqlite_destination_sqlite
  #     - id: s3cfg_section
  #       source: load_s3cfg_section
  #     - id: s3uri
  #       source: load_bucket
  #       valueFrom: |
  #         ${
          
  #           function endsWith(str, suffix) {
  #             return str.indexOf(suffix, str.length - suffix.length) !== -1;
  #           }
          
  #           if ( endsWith(self, '/') ) {
  #             return self + inputs.uuid + '/';
  #           }
  #           else {
  #             return self + '/' + inputs.uuid + '/';
  #           }
          
  #         }
  #     - id: uuid
  #       source: uuid
  #       valueFrom: null
  #   out:
  #     - id: output
