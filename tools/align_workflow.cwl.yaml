#!/usr/bin/env cwl-runner

- id: bamtojson_cmd
  class: CommandLineTool
  requirements:
    - class: ShellCommandRequirement
  inputs:
    - id: "#bam_path"
      type: File
      inputBinding:
        position: 3
  outputs:
    - id: "#output_json"
      type:
        type: array
        items: File
      outputBinding:
        glob: "*.json"
  arguments:
    - valueFrom: ".json"
      position: 1
      shellQuote: false
    - valueFrom: "|"
      position: 4
      shellQuote: false
    - valueFrom: "xargs"
      position: 5
      shellQuote: false
    - valueFrom: "touch"
      position: 6
      shellQuote: false
  baseCommand: grep



- id: bamtofastq_cmd
  class: CommandLineTool
  requirements:
    - class: ShellCommandRequirement
  inputs:
    - id: "#bam_path"
      type: File
      inputBinding:
        position: 2
  outputs:
    - id: "#output_fastq1"
      type:
        type: array
        items: File
      outputBinding:
        glob: "*_1.fq"
    - id: "#output_fastq2"
      type:
        type: array
        items: File
      outputBinding:
        glob: "*_2.fq"
  arguments:
    - valueFrom: ".fq"
      position: 1
      shellQuote: false
    - valueFrom: "|"
      position: 4
      shellQuote: false
    - valueFrom: "xargs"
      position: 5
      shellQuote: false
    - valueFrom: "touch"
      position: 6
      shellQuote: false
  baseCommand: grep



- id: align_cmd
  class: CommandLineTool
  requirements:
    - class: ShellCommandRequirement
    - import: node-engine.cwl
    - import: envvar-global.cwl
  inputs:
    - id: "#fastq1_path"
      type: File
    - id: "#fastq2_path"
      type: File
    - id: "#json_path"
      type: File
  outputs:
    - id: "#output_bam"
      type: File
      outputBinding:
        glob:
          engine: node-engine.cwl
          script: |
            {
            return $job['json'].slice(0,-5)+"_realign.bam"
            }
  arguments:
    - valueFrom: "`basename #fastq1_path`"
      position: 1
      shellQuote: false
    - valueFrom: ">"
      position: 2
      shellQuote: false
    - valueFrom:
        engine: node-engine.cwl
        script: |
          {
          return $job['json'].slice(0,-5)+"_realign.bam"
          }
      position: 3
      shellQuote: false
    - valueFrom: "&&"
      position: 4
      shellQuote: false
    - valueFrom: echo
      position: 5
      shellQuote: false
    - valueFrom: "`basename #fastq2_path`"
      position: 6
      shellQuote: false
    - valueFrom: ">>"
      position: 7
      shellQuote: false
    - valueFrom:
        engine: node-engine.cwl
        script: |
          {
          return $job['json'].slice(0,-5)+"_realign.bam"
          }
      position: 8
      shellQuote: false
    - valueFrom: "&&"
      position: 9
      shellQuote: false
    - valueFrom: echo
      position: 10
      shellQuote: false
    - valueFrom: "`basename #json_path`"
      position: 11
      shellQuote: false
    - valueFrom: ">>"
      position: 12
      shellQuote: false
    - valueFrom:
        engine: node-engine.cwl
        script: |
          {
          return $job['json'].slice(0,-5)+"_realign.bam"
          }
      position: 13
      shellQuote: false
  baseCommand: echo



- id: main
  class: Workflow
  requirements:
    - class: ScatterFeatureRequirement
    - class: StepInputExpressionRequirement
    - class: InlineJavascriptRequirement
    - import: node-engine.cwl
    - import: envvar-global.cwl
  inputs:
    - id: "#bam_path"
      type: File
  outputs:
    - id: "#bamtojson_output_json"
      type:
        type: array
        items: File
      source: "#bamtojson.output_json"
    - id: "#bamtofastq_output_fastq1"
      type:
        type: array
        items: File
      source: "#bamtofastq.output_fastq2"
  steps:
    - id: "#bamtojson"
      run: "#bamtojson_cmd"
      inputs:
        - id: "#bamtojson.bam_path"
          source: "#bam_path"
      outputs:
        - id: "#bamtojson.output_json"
    - id: "#bamtofastq"
      run: "#bamtofastq_cmd"
      inputs:
        - id: "#bamtofastq.bam_path"
          source: "#bam_path"
      outputs:
        - id: "#bamtofastq.output_fastq1"
        - id: "#bamtofastq.output_fastq2"          
    - id: "#align"
      run: "#align_cmd"
      scatter: ["#align.fastq1", "#align.fastq2", "#align.json"]
      scatterMethod: "dotproduct"
      inputs:
        - id: "#align.fastq1"
          source: "#bamtofastq.output_fastq1"
          valueFrom:
            engine: node-engine.cwl
        - id: "#align.fastq2"
          source: "#bamtofastq.output_fastq1"
          valueFrom:
            engine: node-engine.cwl
            script: |
              {
              return {"path": $self.path.slice(0,-4)+"2.fq"}, "class": "File"};
              }
        - id: "#align.json"
          #source: "#bamtojson.output_json"
          valueFrom: pair1.json
      outputs:
        - id: "#align.output_bam"
            # engine: node-engine.cwl
            # script: |
            #   {
            #   var readgroup_basename = inputs.fastq1_path.path.split('/')[-1];
            #   var json_dir = self.path.split('/').slice(0,-1).join('/');
            #   var readgroup_jsonname = readgroup_basename + ".json";
            #   var json_path = json_dir + "/" + readgroup_jsonname;
            #   return {"path": json_path, "class": "File"};
            #   }
        
